<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow
                          http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">
	
	<attribute name="description" value="The main flow of the application that handles searching for hotels to book"/>
	
	<var name="searchCriteria" class="org.springframework.webflow.samples.booking.flow.main.SearchCriteria" scope="flow" />
	
	<start-actions>
		<action method="initCurrentUser" bean="mainActions" />
		<bean-action bean="bookingService" method="findBookings">
			<method-arguments>
				<argument expression="#{user.username}"/>
			</method-arguments>
			<method-result name="#{flowScope.bookings}" type="selectOneDataModel"/>
		</bean-action>
		<!-- <evaluate-action expression="#{bookingService.findBookings(user.username)}" result="#{flowScope.bookings}" 
			type="selectOneDataModel"/> -->
	</start-actions>
	
	<start-state idref="displayMain"/>
	
	<view-state id="displayMain" view="main.xhtml">
		<transition on="findHotels" to="findHotels" />
		<transition on="cancelBooking" to="cancelBooking" />
	</view-state>
	
	<view-state id="findHotels" view="displayHotels.xhtml">
		<render-actions>
			<bean-action bean="bookingService" method="findHotels">
				<method-arguments>
					<argument expression="#{searchCriteria.searchString}"/>
					<argument expression="#{searchCriteria.pageSize}"/>
					<argument expression="#{searchCriteria.page}"/>
				</method-arguments>
				<method-result name="#{flowScope.hotels}" type="selectOneDataModel"/>
			</bean-action>
			<!-- <evaluate-action expression="#{bookingService.findHotels(searchCriteria.searchString, searchCriteria.pageSize, searchCriteria.page)}"
				result="#{flowScope.hotels}" type="selectOneDataModel"/> -->
		</render-actions>
		<transition on="previous" to="findHotels">
			<evaluate-action expression="#{searchCriteria.prevPage()}"/>
			<set attribute="#{flashScope.renderIds}" value="searchResultsFragment"/>
		</transition>
		<transition on="next" to="findHotels">
			<evaluate-action expression="#{searchCriteria.nextPage()}"/>
			<set attribute="#{flashScope.renderIds}" value="searchResultsFragment"/>
		</transition>
		<transition on="selectHotel" to="displayHotel"/>
		<transition on="changeSearch" to="editSearchPopup"/>
	</view-state>
	
	<view-state id="editSearchPopup" view="main.xhtml">
		<attribute name="modal" value="true" type="java.lang.Boolean"/>
		<entry-actions>
			<set attribute="#{flashScope.renderIds}" value="hotelSearchFragment"/>
		</entry-actions>
		<transition on="findHotels" to="findHotels" />
	</view-state>
	
	<view-state id="displayHotel" view="hotelDetails.xhtml">
		<render-actions>
			<set attribute="#{hotel}" value="#{hotels.selectedRow}" scope="request"/>
		</render-actions>
		<transition on="book" to="bookHotel" />
		<transition on="cancel" to="displayMain" />
	</view-state>
	
	<subflow-state id="bookHotel" flow="booking">
		<attribute-mapper>
			<input-mapper>
				<mapping source="#{hotels.selectedRow.id}" target="#{id}"/>
			</input-mapper>
		</attribute-mapper>
		<transition on="bookingAuthorized" to="reloadCurrentUserBookings" />
		<transition on="cancel" to="displayMain" />
	</subflow-state>
	
	<action-state id="cancelBooking">
		<bean-action method="cancelBooking" bean="bookingService">
			<method-arguments>
				<argument expression="#{bookings.selectedRow.id}" parameter-type="long"/>
			</method-arguments>
		</bean-action>
		<transition on="success" to="reloadCurrentUserBookings" />
	</action-state>
	
	<action-state id="reloadCurrentUserBookings">
		<bean-action bean="bookingService" method="findBookings">
			<method-arguments>
				<argument expression="#{user.username}"/>
			</method-arguments>
			<method-result name="#{flowScope.bookings}" type="selectOneDataModel"/>
		</bean-action>
		<!-- <evaluate-action expression="#{bookingService.findBookings(user.username)}" result="#{flowScope.bookings}" 
			type="selectOneDataModel"/> -->
		<transition on="success" to="displayMain" />
	</action-state>
	
	<import resource="main-beans.xml"/>

</flow>