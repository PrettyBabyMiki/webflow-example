<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<!-- The central service of this application that can query hotels and bookings, as well as cancel bookings -->
	<bean id="bookingService" class="org.springframework.webflow.samples.booking.app.JpaBookingService" />

	<!-- Creates a EntityManagerFactory for use with the Hibernate JPA provider and a simple in-memory data source populated with test data -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
		</property>
	</bean>

	<!-- Deploys a in-memory "booking" datasource -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:mem:booking" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>

	<!-- Executes transactions around @Transactional methods -->
	<tx:annotation-driven transaction-manager="transactionManager"/>

	<!-- Drives transactions using local JPA APIs -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- Automatically injects EntityManager references into data access objects that require one -->
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<!-- Maps JPA exceptions that occur to Spring's DataAccessException hierarchy -->
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
		
</beans>